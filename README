#---------------------------------------------------------
#
# $Id: README,v 1.20 1998/06/03 03:59:44 mergl Exp $
#
# Portions Copyright (c) 1994,1995,1996,1997 Tim Bunce
# Portions Copyright (c) 1997,1998           Edmund Mergl
#
#---------------------------------------------------------



DESCRIPTION:
------------

This is version 0.73 of DBD-Pg.
DBD-Pg is a PostgreSQL interface for Perl 5 using DBI.

For further information about DBI look at:
      http://www.fugue.com/dbi/



COPYRIGHT:
----------

You may distribute under the terms of either the GNU General Public
License or the Artistic License, as specified in the Perl README file.


IF YOU HAVE PROBLEMS:
---------------------

Please send comments and bug-reports to <E.Mergl@bawue.de>

Please include the output of perl -v,
                         and perl -V,
           the version of PostgreSQL,
           the version of DBD-Pg,
           and the version of DBI
in your bug-report.


REQUIREMENTS:
-------------

  - build, test and install Perl 5         (at least 5.002)
  - build, test and install the DBI module (at least 0.91)
  - build, test and install PostgreSQL     (at least 6.3)


PLATFORMS:
----------

  This release of DBD-Pg has been developed using Linux 2.0 with 
  dynamic loading for the perl extensions. Let me know, if there 
  are any problems with other platforms.


INSTALLATION:
-------------

The Makefile checks the environment variable POSTGRES_HOME as well 
some standard locations, to find the root directory of your Postgres 
installation.
 
1.   perl Makefile.PL
2.   make
3.   make test
4.   make install

( 1. to 3. as normal user, not as root ! )


TESTING:
--------

Run 'make test'.
Note, that the user running this script must have been created with
the access rights to create databases *AND* users ! Do not run this
script as root !

If testing fails with the message 'login failed', please check if access 
to the database template1 as well as pgperltest is not protected in pg_hba.conf. 

If you are using the shared library libpq.so check if your dynamic loader 
finds libpq.so. With Linux the command /sbin/ldconfig -v should tell you, 
where it finds libpq.so. If ldconfig does not find libpq.so, either add an 
appropriate entry to /etc/ld.so.conf and re-run ldconfig or add the path to 
the environment variable LD_LIBRARY_PATH. 
A typical error message resulting from not finding libpq.so is: 
  install_driver(Pg) failed: Can't load './blib/arch/auto/DBD/Pg/Pg.so' 
  for module DBD::Pg: File not found at 

Some linux distributions have an incomplete perl installation.
If you have compile errors like "XS_VERSION_BOOTCHECK undeclared", make a
          'find .../lib/perl5 -name XSUB.h -print'
If this file is not present, you need to recompile and reinstall perl.

SGI users: if you get segmentation faults make sure, you use the malloc which 
           comes with perl when compiling perl (the default is not to).
           "David R. Noble" <drnoble@engsci.sandia.gov>

HP users: if you get error messages like:
              can't open shared library: .../lib/libpq.sl
              No such file or directory
          when running the test script, try to replace the 
          'shared' option in the LDDFLAGS with 'archive'.
          Dan Lauterbach <danla@dimensional.com>

FreeBSD users: if you get during make test the error message:
    'DBD driver has not implemented the AutoCommit attribute'
    recompile the DBI module and the DBD-Pg module and disable
    optimization. This error message is due to the broken
    optimization in gcc-2.7.2.1.

Sun Users: if you get compile errors like:
           /usr/include/string.h:57: parse error before `]'
           then you need to remove from pgsql/include/libpq-fe.h
           the define for strerror, which clashes with the definition
           in the standard include file.


---------------------------------------------------------------------------

   Edmund Mergl <E.Mergl@bawue.de>                       June 03, 1998

---------------------------------------------------------------------------
